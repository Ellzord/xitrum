2.1 (planned):
* Add digest authentication
* Make extensive use of Knockout.js and Scala delimited continuation
* Integrate WebSocket to Comet
  Comet uses WebSocket if available, or falls back to Ajax
* Add Akka
* Typesafe routes using Scala compiler plugin
* wro4j
* RESTful actions now can use validators:
    val username = param("username") :: Required :: MaxLength(32)
* Middleware architecture based on Netty handlers

2.0 (planned):
* Add Scalate back
* Remove all annotations
* Put related actions into controller
* Add Knockout.js
* Add Scala delimited continuation
  See:
    http://www.earldouglas.com/continuation-based-web-workflows-part-two/
    http://stackoverflow.com/questions/6062003/event-listeners-with-scala-continuations
    http://jim-mcbeath.blogspot.com/2010/08/delimited-continuations.html
* Expose APIs for routing and action/page caching, for cases you don't want
  to use annotation
  See:
    http://ngocdaothanh.github.com/xitrum/restful.html#routing-without-using-annotation
    http://ngocdaothanh.github.com/xitrum/cache.html#cache-page-or-action-without-using-annotation
* Improve Quickstart: https://github.com/ngocdaothanh/xitrum-quickstart
* Improve data-after, now you can write
    data-after="$('#chatInput').val('')"
  instead of
    data-after="function () { $('#chatInput').val('') }"
* Fix urlForPublic bug, resulted URL now has the leading "/"

1.7:
* WebSocket, see:
  http://ngocdaothanh.github.com/xitrum/async.html#websocket
  http://netty.io/blog/2011/11/17/
* Make postback tag attributes HTML5 standards-compliant:
  You must change:
    postback to data-postback
    after    to data-after
    confirum to data-confirm
* Expose APIs for data encryption so that application developers may use
  xitrum.util.{Secure, SecureBase64, SeriDeseri}
  See http://ngocdaothanh.github.com/xitrum/howto.html#encrypt-data
* Update Hazelcast from 1.9.4.4 to 1.9.4.5

1.6:
* Redesign filters to be typesafe
* Add after and around filters
* Add Loader.json and use JSON for config files
  (.json files should be used instead of .properties files)

1.5.3:
* Close connection for HTTP 1.0 clients. This allows Xitrum to be run behind
  Nginx without having to set proxy_buffering to off.
  Nginx talks HTTP/1.1 to the browser and HTTP/1.0 to the backend server, and
  it needs the backend server to close connection after finishing sending
  response to it. See http://wiki.nginx.org/HttpProxyModule.
* Fix the bug that causes connection to be closed immediately when sending file
  from action using renderFile to HTTP 1.0 clients.

1.5.2:
* Add xitrum.Config.root (like Rails.root) and fix #47
* Better API for basic authentication
* renderFile now can work with absolute path on Windows
* Exit if there's error on startup
* Update SLF4J from 1.6.2 to 1.6.4 (and Logback from 0.9.30 from to 1.0.0)
* Update Hazelcast from 1.9.4.3 to 1.9.4.4

1.5.1:
* Update Jerkson from 0.4.2 to 0.5.0

1.5:
* Static public files now do not have to have /public prefix, this is convenient
  but dynamic content perfomance decreases a little
* Applications can handle 404 and 500 errors by their own instead of using
  the default 404.html and 500.html
* Change validation syntax to allow validators to change HTML element:
  <input type="text" name={validate("username", Required)} /> now becomes
  {<input type="text" name="username" /> :: Required}

  <input type="text" name={validate("param", MaxLength(32), MyValidator)} /> now becomes
  {<input type="text" name="param" /> :: MaxLength(32) :: MyValidator}

  <input type="text" name={validate("no_need_to_validate")} /> now becomes
  {<input type="text" name="no_need_to_validate" /> :: Validated}
* Implement more validators: Email, EqualTo, Min, Max, Range, RangeLength
* Update jQuery Validation from 1.8.1 to 1.9.0:
  https://github.com/jzaefferer/jquery-validation/blob/master/changelog.txt
* Textual responses now include charset in Content-Type header:
  http://code.google.com/speed/page-speed/docs/rendering.html#SpecifyCharsetEarly
* Fix bug header not found: Content-Length for 404 and 500 content

1.4:
* Fix bug at setting Expires header for static content, it is now one year
  later instead of 17 days later
* Set Expires header for resources in classpath
* HTTPS (see config/xitrum.properties)
  KeyStore Explorer is a good tool to create self-signed keystore:
  http://www.lazgosoftware.com/kse/index.html

1.3:
* Update
    Hazelcast: 1.9.4.2 -> 1.9.4.3
    Jerkson:   0.4.1   -> 0.4.2
    SBT:       0.10.1  -> 0.11.0
* Improve performance, based on Google's best practices:
  http://code.google.com/speed/page-speed/docs/rules_intro.html
  Simple benchmark (please use httperf, ab is broken) on
  MacBook Pro 2 GHz Core i7, 8 GB memory:
    Static file:                 ~11000 req/s
    Resource file in classpath:  ~11000 req/s
    Dynamic HTML without layout: ~7000  req/s
    Dynamic HTML with layout:    ~7000  req/s
* Only gzip when client specifies "gzip" in Accept-Encoding request header

1.2:
* Conditional GET using ETag, see:
  http://stevesouders.com/hpws/rules.php
* Fix for radio: SecureBase64.encrypt always returns same output for same input
  <input type="radio" name={validate("light")} value="red" />
  <input type="radio" name={validate("light")} value="yellow" />
  <input type="radio" name={validate("light")} value="green" />

1.1:
* i18n using Scaposer
* Faster route collecting on startup using Sclasner
